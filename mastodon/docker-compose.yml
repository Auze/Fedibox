version: '3.3'

services:
  masto-redis:
    restart: always
    image: redis:7-alpine
    networks:
      - masto-net
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
    volumes:
      - ./redis:/data

  masto-web:
    image: ghcr.io/mastodon/mastodon:v4.1.3
    restart: always
    env_file: ./config/.env.production
    command: bash -c "apt-get install nano && rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    networks:
      - external-net
      - masto-net
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:3000/health || exit 1']
    ports:
      - 3200:3200'
    depends_on:
      - masto-redis
    volumes:
      - ./public/system:/mastodon/public/system

  masto-streaming:
    image: ghcr.io/mastodon/mastodon:v4.1.3
    restart: always
    env_file: ./config/.env.production
    command: node ./streaming
    networks:
      - external-net
      - masto-net
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1']
    ports:
      - '127.0.0.1:4000:4000'
    depends_on:
      - masto-redis

  masto-sidekiq:
    image: ghcr.io/mastodon/mastodon:v4.1.3
    restart: always
    env_file: ./config/.env.production
    command: bundle exec sidekiq
    depends_on:
      - masto-redis
    networks:
      - external-net
      - masto-net
    volumes:
      - ./public/system:/mastodon/public/system
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false"]

  # es:
  #   restart: always
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.17.4
  #   environment:
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m -Des.enforce.bootstrap.checks=true"
  #     - "xpack.license.self_generated.type=basic"
  #     - "xpack.security.enabled=false"
  #     - "xpack.watcher.enabled=false"
  #     - "xpack.graph.enabled=false"
  #     - "xpack.ml.enabled=false"
  #     - "bootstrap.memory_lock=true"
  #     - "cluster.name=es-mastodon"
  #     - "discovery.type=single-node"
  #     - "thread_pool.write.queue_size=1000"
  #   networks:
  #      - external-net
  #      - masto-net
  #   healthcheck:
  #      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
  #   volumes:
  #      - ./elasticsearch:/usr/share/elasticsearch/data
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #     nofile:
  #       soft: 65536
  #       hard: 65536
  #   ports:
  #     - '127.0.0.1:9200:9200'
networks:
  external-net:
  masto-net:
    internal: true